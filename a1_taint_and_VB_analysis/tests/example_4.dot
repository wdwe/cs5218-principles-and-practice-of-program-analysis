digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55f0f3b31c40 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %sink = alloca i32, align 4\l  %source = alloca i32, align 4\l  %N = alloca i32, align 4\l  %a = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  store i32 0, i32* %a, align 4\l  br label %while.cond\l}"];
	Node0x55f0f3b31c40 -> Node0x55f0f3b32860;
	Node0x55f0f3b32860 [shape=record,label="{while.cond:                                       \l  %0 = load i32, i32* %a, align 4\l  %1 = load i32, i32* %N, align 4\l  %cmp = icmp slt i32 %0, %1\l  br i1 %cmp, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x55f0f3b32860:s0 -> Node0x55f0f3b32ab0;
	Node0x55f0f3b32860:s1 -> Node0x55f0f3b32b90;
	Node0x55f0f3b32ab0 [shape=record,label="{while.body:                                       \l  %2 = load i32, i32* %a, align 4\l  %rem = srem i32 %2, 2\l  %cmp1 = icmp eq i32 %rem, 1\l  br i1 %cmp1, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55f0f3b32ab0:s0 -> Node0x55f0f3b32f70;
	Node0x55f0f3b32ab0:s1 -> Node0x55f0f3b33040;
	Node0x55f0f3b32f70 [shape=record,label="{if.then:                                          \l  %3 = load i32, i32* %source, align 4\l  store i32 %3, i32* %i, align 4\l  br label %if.end\l}"];
	Node0x55f0f3b32f70 -> Node0x55f0f3b33190;
	Node0x55f0f3b33040 [shape=record,label="{if.else:                                          \l  %4 = load i32, i32* %i, align 4\l  store i32 %4, i32* %j, align 4\l  br label %if.end\l}"];
	Node0x55f0f3b33040 -> Node0x55f0f3b33190;
	Node0x55f0f3b33190 [shape=record,label="{if.end:                                           \l  %5 = load i32, i32* %a, align 4\l  %inc = add nsw i32 %5, 1\l  store i32 %inc, i32* %a, align 4\l  br label %while.cond\l}"];
	Node0x55f0f3b33190 -> Node0x55f0f3b32860;
	Node0x55f0f3b32b90 [shape=record,label="{while.end:                                        \l  %6 = load i32, i32* %j, align 4\l  store i32 %6, i32* %sink, align 4\l  %7 = load i32, i32* %retval, align 4\l  ret i32 %7\l}"];
}
